--- a/Makefile
+++ b/Makefile
@@ -14,6 +14,7 @@ PKG_CONFIG_DEPENDS:= \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_IPT2Socks \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Kcptun \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_NaiveProxy \
+	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_PDNSD \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Redsocks2 \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_NONE_Client \
 	CONFIG_PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Client \
@@ -32,8 +33,8 @@ LUCI_PKGARCH:=all
 LUCI_DEPENDS:= \
 	@(PACKAGE_libustream-mbedtls||PACKAGE_libustream-openssl||PACKAGE_libustream-wolfssl) \
 	+coreutils +coreutils-base64 +dns2socks +dns2tcp +dnsmasq-full +@PACKAGE_dnsmasq_full_ipset +ipset +kmod-ipt-nat \
-	+ip-full +iptables +iptables-mod-tproxy +lua +lua-neturl +libuci-lua +microsocks \
-	+tcping +resolveip +shadowsocksr-libev-ssr-check +uclient-fetch \
+	+ip-full +iptables +iptables-mod-tproxy +lua +lua-neturl +libuci-lua +luci-lib-ipkg \
+	+microsocks +tcping +resolveip +shadowsocksr-libev-ssr-check +uclient-fetch \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray:curl \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_V2ray:v2ray-core \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Xray:curl \
@@ -44,6 +45,7 @@ LUCI_DEPENDS:= \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_IPT2Socks:ipt2socks \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Kcptun:kcptun-client \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_NaiveProxy:naiveproxy \
+	+PACKAGE_$(PKG_NAME)_INCLUDE_PDNSD:pdnsd-alt \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Redsocks2:redsocks2 \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Client:shadowsocks-libev-ss-local \
 	+PACKAGE_$(PKG_NAME)_INCLUDE_Shadowsocks_Libev_Client:shadowsocks-libev-ss-redir \
@@ -123,7 +125,7 @@ config PACKAGE_$(PKG_NAME)_INCLUDE_TUIC-Client
 	bool "Include tuic-client"
 	select PACKAGE_$(PKG_NAME)_INCLUDE_ChinaDNS_NG
 	select PACKAGE_$(PKG_NAME)_INCLUDE_IPT2Socks
-	depends on aarch64||arm||i386||x86_64
+	depends on aarch64||arm||i686||x86_64
 	depends on !(TARGET_x86_geode||TARGET_x86_legacy)
 	default n
 
@@ -140,6 +142,10 @@ config PACKAGE_$(PKG_NAME)_INCLUDE_NaiveProxy
 	depends on !(arc||armeb||mips||mips64||powerpc||TARGET_gemini)
 	default n
 
+config PACKAGE_$(PKG_NAME)_INCLUDE_PDNSD
+	bool "Include PDNSD"
+	default n
+
 config PACKAGE_$(PKG_NAME)_INCLUDE_Redsocks2
 	bool "Include Redsocks2"
 	default n
--- a/luasrc/controller/shadowsocksr.lua
+++ b/luasrc/controller/shadowsocksr.lua
@@ -26,6 +26,7 @@ function index()
 	entry({"admin", "services", "shadowsocksr", "reset"}, call("act_reset"))
 	entry({"admin", "services", "shadowsocksr", "restart"}, call("act_restart"))
 	entry({"admin", "services", "shadowsocksr", "delete"}, call("act_delete"))
+	entry({"admin", "services", "shadowsocksr", "cache"}, call("act_cache"))
 end
 
 function subscribe()
@@ -133,3 +134,10 @@ function act_delete()
 	luci.sys.call("/etc/init.d/shadowsocksr restart &")
 	luci.http.redirect(luci.dispatcher.build_url("admin", "services", "shadowsocksr", "servers"))
 end
+
+function act_cache()
+	local e = {}
+	e.ret = luci.sys.call("pdnsd-ctl -c /var/etc/ssrplus/pdnsd empty-cache >/dev/null")
+	luci.http.prepare_content("application/json")
+	luci.http.write_json(e)
+end
--- a/luasrc/model/cbi/shadowsocksr/client-config.lua
+++ b/luasrc/model/cbi/shadowsocksr/client-config.lua
@@ -377,6 +377,20 @@ o.rmempty = true
 o.default = ""
 o:depends("type", "tuic")
 
+--[[
+-- Tuic username for local socks connect
+o = s:option(Value, "tuic_socks_username", translate("TUIC UserName For Local Socks"))
+o.rmempty = true
+o.default = ""
+o:depends("type", "tuic")
+
+-- Tuic Password for local socks connect
+o = s:option(Value, "tuic_socks_password", translate("TUIC Password For Local Socks"))
+o.password = true
+o.rmempty = true
+o.default = ""
+o:depends("type", "tuic")
+--]]
 
 o = s:option(ListValue, "udp_relay_mode", translate("UDP relay mode"))
 o:depends("type", "tuic")
--- a/luasrc/model/cbi/shadowsocksr/client.lua
+++ b/luasrc/model/cbi/shadowsocksr/client.lua
@@ -92,6 +92,7 @@ o.default = 1
 o = s:option(ListValue, "pdnsd_enable", translate("Resolve Dns Mode"))
 o:value("1", translate("Use DNS2TCP query"))
 o:value("2", translate("Use DNS2SOCKS query and cache"))
+o:value("3", translate("Use Pdnsd tcp query and cache"))
 o:value("0", translate("Use Local DNS Service listen port 5335"))
 o.default = 1
 
@@ -111,6 +112,7 @@ o:value("114.114.114.114:53", translate("Oversea Mode DNS-1 (114.114.114.114)"))
 o:value("114.114.115.115:53", translate("Oversea Mode DNS-2 (114.114.115.115)"))
 o:depends("pdnsd_enable", "1")
 o:depends("pdnsd_enable", "2")
+o:depends("pdnsd_enable", "3")
 o.description = translate("Custom DNS Server format as IP:PORT (default: 8.8.4.4:53)")
 o.datatype = "ip4addrport"
 
@@ -128,6 +130,7 @@ if is_finded("chinadns-ng") then
 	o:value("1.2.4.8:53", translate("CNNIC SDNS (1.2.4.8)"))
 	o:depends({pdnsd_enable = "1", run_mode = "router"})
 	o:depends({pdnsd_enable = "2", run_mode = "router"})
+	o:depends({pdnsd_enable = "3", run_mode = "router"})
 	o.description = translate("Custom DNS Server format as IP:PORT (default: disabled)")
 	o.validate = function(self, value, section)
 		if (section and value) then
--- a/luasrc/model/cbi/shadowsocksr/status.lua
+++ b/luasrc/model/cbi/shadowsocksr/status.lua
@@ -88,7 +88,7 @@ if Process_list:find("ssr.server") then
 	server_run = 1
 end
 
-if Process_list:find("ssrplus/bin/dns2tcp") or (Process_list:find("ssrplus.dns") and Process_list:find("dns2socks.127.0.0.1.*127.0.0.1.5335")) then
+if Process_list:find("ssrplus/bin/pdnsd") or Process_list:find("ssrplus/bin/dns2tcp") or (Process_list:find("ssrplus.dns") and Process_list:find("dns2socks.127.0.0.1.*127.0.0.1.5335")) then
 	pdnsd_run = 1
 end
 
@@ -183,6 +183,11 @@ if uci:get_first("shadowsocksr", 'global', 'adblock', '0') == '1' then
 	s.value = ad_count .. " " .. translate("Records")
 end
 
+if uci:get_first("shadowsocksr", 'global', 'pdnsd_enable', '0') == '1' then
+	s = m:field(DummyValue, "cache", translate("Reset pdnsd cache"))
+	s.template = "shadowsocksr/cache"
+end
+
 s = m:field(DummyValue, "check_port", translate("Check Server Port"))
 s.template = "shadowsocksr/checkport"
 s.value = translate("No Check")
--- /dev/null
+++ b/luasrc/view/shadowsocksr/cache.htm
@@ -0,0 +1,29 @@
+<%+cbi/valueheader%>
+<script type="text/javascript">//<![CDATA[
+	function cache(btn,urlname)
+	{
+		btn.disabled = true;
+		btn.value    = '<%:Perform reset%>';
+		murl=urlname;
+		XHR.get('<%=luci.dispatcher.build_url("admin", "services", "shadowsocksr","cache")%>',
+			{ set:murl },
+			function(x,rv)
+			{
+			var s = document.getElementById(urlname+'-status');
+			if (s)
+			{
+				if (rv.ret=="0")
+				s.innerHTML ="<font color='green'>"+"<%:Reset complete%>"+"</font>";
+				else
+				s.innerHTML ="<font color='red'>"+"<%:Reset Error%>"+"</font>";
+			}
+				btn.disabled = false;
+				btn.value    = '<%:Perform reset%>';
+			}
+		);
+		return false;
+	}
+//]]></script>
+<input type="button" class="btn cbi-button cbi-button-reset" value="<%:Perform reset%>" onclick="return cache(this,'<%=self.option%>')" />
+<span id="<%=self.option%>-status"><em><%=self.value%></em></span>
+<%+cbi/valuefooter%>
--- a/po/zh-cn/ssr-plus.po
+++ b/po/zh-cn/ssr-plus.po
@@ -400,6 +400,9 @@ msgstr "DNS 解析方式"
 msgid "Use SSR DNS Tunnel"
 msgstr "使用 SSR DNS 隧道"
 
+msgid "Use Pdnsd"
+msgstr "使用 Pdnsd"
+
 msgid "DNS Anti-pollution"
 msgstr "DNS 防污染服务"
 
@@ -463,6 +466,9 @@ msgstr "使用 DNS2TCP 查询"
 msgid "Use DNS2SOCKS query and cache"
 msgstr "使用 DNS2SOCKS 查询并缓存"
 
+msgid "Use Pdnsd tcp query and cache"
+msgstr "使用 PDNSD TCP 查询并缓存"
+
 msgid "DNS Server IP:Port"
 msgstr "DNS 服务器 IP:Port"
 
@@ -748,6 +754,9 @@ msgstr "WebSocket 主机名"
 msgid "WebSocket Path"
 msgstr "WebSocket 路径"
 
+msgid "Enable early data"
+msgstr "启用前置数据"
+
 msgid "Max Early Data"
 msgstr "最大前置数据"
 
@@ -799,6 +808,9 @@ msgstr "微信视频通话"
 msgid "DTLS 1.2"
 msgstr "DTLS 1.2 数据包"
 
+msgid "WireGuard"
+msgstr "WireGuard 数据包"
+
 msgid "MTU"
 msgstr "最大传输单元"
 
@@ -832,6 +844,9 @@ msgstr "节点公钥"
 msgid "Pre-shared key"
 msgstr "预共享密钥"
 
+msgid "Packet Encoding"
+msgstr "数据包编码"
+
 msgid "Network interface to use"
 msgstr "使用的网络接口"
 
@@ -847,6 +862,9 @@ msgstr "重置完成"
 msgid "Reset Error"
 msgstr "重置错误"
 
+msgid "Reset pdnsd cache"
+msgstr "重置 PDNSD 缓存"
+
 msgid "Finger Print"
 msgstr "指纹伪造"
 
@@ -856,23 +874,32 @@ msgstr "重新应用"
 msgid "Apply"
 msgstr "应用"
 
+msgid "Default Packet Encoding"
+msgstr "默认数据包编码"
+
 msgid "Enable Netflix Mode"
 msgstr "启用 Netflix 分流模式"
 
 msgid "TUIC User UUID"
-msgstr "TUIC用户uuid"
+msgstr "TUIC 用户 uuid"
 
 msgid "TUIC Server IP Address"
-msgstr "TUIC 服务器IP地址"
+msgstr "TUIC 服务器 IP 地址"
 
 msgid "TUIC User Password"
-msgstr "TUIC用户密钥"
+msgstr "TUIC 用户密钥"
+
+msgid "TUIC UserName For Local Socks"
+msgstr "用于本地 Socks 服务器连接的用户名"
+
+msgid "TUIC Password For Local Socks"
+msgstr "用于本地 Socks 服务器连接的密码"
 
 msgid "UDP relay mode"
-msgstr "UDP中继模式"
+msgstr "UDP 中继模式"
 
 msgid "native UDP characteristics"
-msgstr "原生UDP特性"
+msgstr "原生 UDP 特性"
 
 msgid "lossless UDP relay using QUIC streams"
 msgstr "使用 QUIC 流的无损 UDP 中继"
@@ -887,13 +914,13 @@ msgid "Timeout for establishing a connection to server(second)"
 msgstr "连接超时时间（单位：秒）"
 
 msgid "Garbage collection interval(second)"
-msgstr "UDP数据包片残片清理间隔（单位：秒）"
+msgstr "UDP 数据包片残片清理间隔（单位：秒）"
 
 msgid "Garbage collection lifetime(second)"
-msgstr "UDP数据包残片在服务器的保留时间（单位：秒）"
+msgstr "UDP 数据包残片在服务器的保留时间（单位：秒）"
 
 msgid "Disable SNI"
-msgstr "关闭SNI服务器名称指示"
+msgstr "关闭 SNI 服务器名称指示"
 
 msgid "Enable 0-RTT QUIC handshake"
 msgstr "客户端启用 0-RTT QUIC 连接握手"
@@ -908,7 +935,8 @@ msgid "Set if the listening socket should be dual-stack"
 msgstr "设置监听套接字为双栈"
 
 msgid "Maximum packet size the socks5 server can receive from external"
-msgstr "socks5服务器可以从外部接收的最大数据包大小（单位：字节）"
+msgstr "socks5 服务器可以从外部接收的最大数据包大小（单位：字节）"
 
 msgid "Disable ChinaDNS-NG"
 msgstr "直通模式（禁用ChinaDNS-NG）"
+
--- a/root/etc/init.d/shadowsocksr
+++ b/root/etc/init.d/shadowsocksr
@@ -78,7 +78,7 @@ get_host_ip() {
 	if [ -z "$(echo $host | grep -E "([0-9]{1,3}[\.]){3}[0-9]{1,3}")" ]; then
 		if [ "$host" == "${host#*:[0-9a-fA-F]}" ]; then
 			ip=$(resolveip -4 -t 3 $host | awk 'NR==1{print}')
-			[ -z "$ip" ] && ip=$(wget -q -O- http://119.29.29.29/d?dn=$host | awk -F ';' '{print $1}')
+			[ -z "$ip" ] && ip=$(wget-ssl -q -O- http://119.29.29.29/d?dn=$host | awk -F ';' '{print $1}')
 		fi
 	fi
 	[ -z "$ip" ] || uci_set_by_name $1 ip $ip
@@ -177,7 +177,44 @@ start_dns() {
 	local ssrplus_dns="$(uci_get_by_type global pdnsd_enable 0)"
 	local dnsserver="$(uci_get_by_type global tunnel_forward 8.8.4.4:53)"
 	local run_mode="$(uci_get_by_type global run_mode)"
-
+	start_pdnsd() {
+		local usr_dns="$1"
+		local usr_port="$2"
+		if [ ! -f "$TMP_PATH/pdnsd/pdnsd.cache" ]; then
+			mkdir -p $TMP_PATH/pdnsd
+			touch $TMP_PATH/pdnsd/pdnsd.cache
+			chown -R nobody:nogroup $TMP_PATH/pdnsd
+		fi
+		cat <<-EOF >$TMP_PATH/pdnsd.conf
+			global{
+			perm_cache=1024;
+			cache_dir="$TMP_PATH/pdnsd";
+			pid_file="/var/run/pdnsd.pid";
+			run_as="nobody";
+			server_ip=127.0.0.1;
+			server_port=$dns_port;
+			status_ctl=on;
+			query_method=tcp_only;
+			min_ttl=1h;
+			max_ttl=1w;
+			timeout=10;
+			neg_domain_pol=on;
+			proc_limit=2;
+			procq_limit=8;
+			par_queries=1;
+			}
+			server{
+			label="ssr-usrdns";
+			ip=$usr_dns;
+			port=$usr_port;
+			timeout=6;
+			uptest=none;
+			interval=10m;
+			purge_cache=off;
+			}
+		EOF
+		ln_start_bin $(first_type pdnsd) pdnsd -c $TMP_PATH/pdnsd.conf
+	}
 	if [ "$ssrplus_dns" != "0" ]; then
 		case "$run_mode" in
 		gfw) ipset add gfwlist ${dnsserver%:*} 2>/dev/null ;;
@@ -194,6 +231,12 @@ start_dns() {
 			ln_start_bin $(first_type dns2socks) dns2socks 127.0.0.1:$tmp_dns_port $dnsserver 127.0.0.1:$dns_port -q
 			pdnsd_enable_flag=2
 			;;
+		3)
+		local dns_server=$(echo "$dnsserver" | awk -F ':' '{print $1}')
+		local dnsport=$(echo "$dnsserver" | awk -F ':' '{print $2}')
+			start_pdnsd $dns_server $dnsport
+			pdnsd_enable_flag=3
+			;;
 		esac
 
 		if [ "$run_mode" = "router" ]; then
@@ -379,14 +422,11 @@ start_udp() {
 		echolog "UDP TPROXY Relay:$($(first_type "hysteria") --version | awk '{print $1,$3}') Started!"
 		;;
 	tuic)
-		# gen_config_file $UDP_RELAY_SERVER $type 2 $tmp_udp_local_port
-		# ln_start_bin $(first_type tuic-client) tuic-client --config $udp_config_file
-		# ln_start_bin $(first_type ipt2socks) ipt2socks -U -b 0.0.0.0 -4 -s 127.0.0.1 -p $tmp_udp_local_port -l $tmp_udp_port
-		# echolog "UDP TPROXY Relay:tuic-client $($(first_type tuic-client) --version) Started!"
-		# FIXME: ipt2socks cannot handle udp reply from tuic
-		echolog "TUIC UDP TPROXY Relay not supported!"
-		redir_udp=0
-		ARG_UDP=""
+		gen_config_file $UDP_RELAY_SERVER $type 2 $tmp_udp_local_port
+		ln_start_bin $(first_type tuic-client) tuic-client --config $udp_config_file
+		ln_start_bin $(first_type ipt2socks) ipt2socks -U -b 0.0.0.0 -4 -s 127.0.0.1 -p $tmp_udp_local_port -l $tmp_udp_port
+		echolog "UDP TPROXY Relay:tuic-client $($(first_type tuic-client) --version) Started!"
+		echolog "TUIC UDP TPROXY Relay not supported!"
 		;;
 	socks5)
 		# if [ "$(uci_get_by_name $UDP_RELAY_SERVER auth_enable 0)" == "1" ]; then
@@ -476,8 +515,6 @@ start_shunt() {
 		ln_start_bin $(first_type ipt2socks) ipt2socks -R -b 0.0.0.0 -4 -s 127.0.0.1 -p $tmp_port -l $tmp_shunt_port
 		ln_start_bin $(first_type dns2socks) dns2socks 127.0.0.1:$tmp_port 8.8.8.8:53 127.0.0.1:$tmp_shunt_dns_port -q
 		echolog "shunt:tuic-client $($(first_type tuic-client) --version) Started!"
-		# FIXME: ipt2socks cannot handle udp reply from tuic
-		redir_udp=0
 		;;
 	# socks5)
 	# 	if [ "$(uci_get_by_name $SHUNT_SERVER auth_enable 0)" == "1" ]; then
@@ -994,6 +1031,7 @@ reset() {
 		add shadowsocksr access_control
 		set shadowsocksr.@access_control[0].lan_ac_mode='0'
 		set shadowsocksr.@access_control[0].router_proxy='1'
+		add_list shadowsocksr.@access_control[0].wan_bp_ips='127.255.255.255'
 		add_list shadowsocksr.@access_control[0].wan_fw_ips=149.154.160.0/20
 		add_list shadowsocksr.@access_control[0].wan_fw_ips=67.198.55.0/24
 		add_list shadowsocksr.@access_control[0].wan_fw_ips=91.108.4.0/22
--- a/root/usr/bin/ssr-monitor
+++ b/root/usr/bin/ssr-monitor
@@ -105,6 +105,20 @@ while [ "1" == "1" ]; do #死循环
 			ln_start_bin $(first_type dns2socks) dns2socks 127.0.0.1:$tmp_dns_port $dnsserver 127.0.0.1:$dns_port -q
 		fi
 	fi
+	#pdnsd
+	elif [ "$pdnsd_process" -eq 3 ]; then
+		icount=$(busybox ps -w | grep $TMP_BIN_PATH/pdnsd | grep -v grep | wc -l)
+		if [ "$icount" -lt 3 ]; then #如果进程挂掉就重启它
+			logger -t "$NAME" "pdnsd tunnel error.restart!"
+			echolog "pdnsd tunnel error.restart!"
+			if [ -f /var/run/pdnsd.pid ]; then
+				kill $(cat /var/run/pdnsd.pid) >/dev/null 2>&1
+			else
+				kill -9 $(busybox ps -w | grep $TMP_PATH/pdnsd.conf | grep -v grep | awk '{print $1}') >/dev/null 2>&1
+			fi
+			ln_start_bin $(first_type pdnsd) pdnsd -c $TMP_PATH/pdnsd.conf
+		fi
+	fi
 	#chinadns-ng
 	if [ "$(uci -q get "dhcp.@dnsmasq[0]._unused_ssrp_changed")" = "1" ]; then
 		icount=$(busybox ps -w | grep $TMP_BIN_PATH/chinadns-ng | grep -v grep | wc -l)
--- a/root/usr/bin/ssr-rules
+++ b/root/usr/bin/ssr-rules
@@ -237,13 +237,15 @@ tp_rule() {
 	router)
 		$ipt -A SS_SPEC_TPROXY -p udp -m set --match-set ss_spec_wan_ac dst -j RETURN
 		$ipt -A SS_SPEC_TPROXY -p udp -m set --match-set china dst -j RETURN
-		$ipt -A SS_SPEC_TPROXY -p udp --dport 80 -j DROP
+		$ipt -A SS_SPEC_TPROXY -p udp --dport 80 -j REJECT
+		$ipt -A SS_SPEC_TPROXY -p udp --dport 443 -j REJECT
 		$ipt -A SS_SPEC_TPROXY -p udp -m set --match-set gmlan src -m set ! --match-set china dst -j TPROXY --on-port "$LOCAL_PORT" --tproxy-mark 0x01/0x01
 		$ipt -A SS_SPEC_TPROXY -p udp $PROXY_PORTS -m set ! --match-set ss_spec_wan_ac dst -j TPROXY --on-port "$LOCAL_PORT" --tproxy-mark 0x01/0x01
 		;;
 	gfw)
 		$ipt -A SS_SPEC_TPROXY -p udp -m set --match-set china dst -j RETURN
-		$ipt -A SS_SPEC_TPROXY -p udp --dport 80 -j DROP
+		$ipt -A SS_SPEC_TPROXY -p udp --dport 80 -j REJECT
+		$ipt -A SS_SPEC_TPROXY -p udp --dport 443 -j REJECT
 		$ipt -A SS_SPEC_TPROXY -p udp $PROXY_PORTS -m set --match-set gfwlist dst -j TPROXY --on-port "$LOCAL_PORT" --tproxy-mark 0x01/0x01
 		$ipt -A SS_SPEC_TPROXY -p udp -m set --match-set gmlan src -m set ! --match-set china dst -j TPROXY --on-port "$LOCAL_PORT" --tproxy-mark 0x01/0x01
 		;;
--- a/root/usr/share/rpcd/acl.d/luci-app-ssr-plus.json
+++ b/root/usr/share/rpcd/acl.d/luci-app-ssr-plus.json
@@ -2,10 +2,16 @@
 	"luci-app-ssr-plus": {
 		"description": "Grant UCI access for luci-app-ssr-plus",
 		"read": {
+			"file": {
+				"/etc/ssrplus/*": [ "read" ]
+			},
 			"uci": ["shadowsocksr"]
 		},
 		"write": {
+			"file": {
+				"/etc/ssrplus/*": [ "write" ]
+			},
 			"uci": ["shadowsocksr"]
 		}
 	}
-}
\ No newline at end of file
+}
--- a/root/usr/share/shadowsocksr/gen_config.lua
+++ b/root/usr/share/shadowsocksr/gen_config.lua
@@ -319,14 +319,16 @@ local tuic = {
 				gc_interval = server.gc_interval and server.gc_interval .. "s" or nil,
 				gc_lifetime = server.gc_lifetime and server.gc_lifetime .. "s" or nil,
 				alpn = server.tls_alpn,
-				disable_sni = (server.disable_sni == "1") and true or false,
-				zero_rtt_handshake = (server.zero_rtt_handshake == "1") and true or false,
+				disable_sni = (server.disable_sni == "1"),
+				zero_rtt_handshake = (server.zero_rtt_handshake == "1"),
 				send_window = tonumber(server.send_window),
 				receive_window = tonumber(server.receive_window)
         },
 		["local"] = {
-				server = "0.0.0.0:" .. tonumber(local_port),
-				--dual_stack = (server.tuic_dual_stack == "1") and true or false,
+				server = "[::]:" .. tonumber(local_port),
+				--username = server.tuic_socks_username,
+				--password = server.tuic_socks_password,
+				dual_stack = (server.tuic_dual_stack == "1") and true or false,
 				max_packet_size = tonumber(server.tuic_max_package_size)
 		}
 }
--- a/root/usr/share/shadowsocksr/update.lua
+++ b/root/usr/share/shadowsocksr/update.lua
@@ -101,7 +101,7 @@ end
 
 local function update(url, file, type, file2)
 	local Num = 1
-	local refresh_cmd = "wget --no-check-certificate -q -O /tmp/ssr-update." .. type .. " " .. url
+	local refresh_cmd = "wget-ssl --no-check-certificate -q -O /tmp/ssr-update." .. type .. " " .. url
 	local sret = luci.sys.call(refresh_cmd)
 	if sret == 0 then
 		if type == "gfw_data" then
