diff --git a/Makefile b/Makefile
index 24e92d4..2aa23cc 100644
--- a/Makefile
+++ b/Makefile
@@ -11,7 +11,7 @@ define Package/luci-app-trojan
 	CATEGORY:=LuCI
 	SUBMENU:=2. Trojan
 	TITLE:=LuCI app for Trojan
-	DEPENDS:=+luci-base +wget +unzip +ip +iptables +bash +ipset +libmbedtls +ca-certificates +iptables-mod-tproxy +pdnsd-alt +curl +dnscrypt-proxy
+	DEPENDS:=+luci-base +wget-ssl +unzip +ip +iptables +bash +ipset +libmbedtls +ca-certificates +iptables-mod-tproxy +pdnsd-alt +curl +dnscrypt-proxy
 	PKGARCH:=all
 	MAINTAINER:=frainzy1477
 endef
diff --git a/root/etc/init.d/trojan b/root/etc/init.d/trojan
index 4e47881..e559ac0 100644
--- a/root/etc/init.d/trojan
+++ b/root/etc/init.d/trojan
@@ -1,8 +1,8 @@
 #!/bin/sh /etc/rc.common
- 
+
 START=93
 STOP=15
-   
+
 SERVICE_DAEMONIZE=1
 NAME=trojan
 CONFIG_FILE=/etc/$NAME/config.json
@@ -103,8 +103,8 @@ gen_config_file() {
 }
 
 redir(){
-	gen_config_file $GLOBAL_SERVER 0	
-	if [ "$dns_mode" == "dnscrypt" ];then 
+	gen_config_file $GLOBAL_SERVER 0
+	if [ "$dns_mode" == "dnscrypt" ];then
 		sh $TSHARE/dnscrypt.sh >/dev/null 2>&1 &
 	elif [ "$dns_mode" == "pdnsd" ];then
 		sh $TSHARE/pdnsd.sh >/dev/null 2>&1 &
@@ -123,60 +123,60 @@ start(){
 	rm -rf $CONFIG_FILE
 	if [ "${enable}" -eq 1 ] && [ -f $Core ] && [ -f  $TSHARE/disable.lock ]; then
 		if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
-			echo "Starting Client" >$REAL_LOG 
+			echo "Starting Client" >$REAL_LOG
 		elif [ "${lang}" == "zh_cn" ];then
 			echo "启动客户端" >$REAL_LOG
-		fi			
+		fi
 		sleep 1
-		local GLOBAL_SERVER 
+		local GLOBAL_SERVER
 		local dns_mode pdnsd  dnscrypt
-		dns_mode=$(uci get $NAME.@settings[0].dns_mode 2>/dev/null)			
+		dns_mode=$(uci get $NAME.@settings[0].dns_mode 2>/dev/null)
 		if [ -z "$switch_server" ] ;then
 			GLOBAL_SERVER=$(uci_get_by_type global global_server 2>/dev/null)
 		else
 			GLOBAL_SERVER=$switch_server
-		fi					
-		rm -f /var/etc/$NAME*				
-		sleep 1	
+		fi
+		rm -f /var/etc/$NAME*
+		sleep 1
 		redir >/dev/null 2>&1
 		if [ "$dns_mode" != "off" ];then
 			if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
-				echo "Enabling Dns" >$REAL_LOG 
+				echo "Enabling Dns" >$REAL_LOG
 			elif [ "${lang}" == "zh_cn" ];then
 				echo "启用DNS" >$REAL_LOG
 			fi
 			set_forward_dnsmasq 2>/dev/null 2>&1
-		fi	
-		if [ "$(ls -l $CONFIG_FILE|awk '{print int($5)}')" -ne 0 ]; then	
+		fi
+		if [ "$(ls -l $CONFIG_FILE|awk '{print int($5)}')" -ne 0 ]; then
 			if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
-				echo "Setting up  iptables rules" >$REAL_LOG 
+				echo "Setting up  iptables rules" >$REAL_LOG
 			elif [ "${lang}" == "zh_cn" ];then
 				echo "设置 iptables" >$REAL_LOG
 			fi
 			rules >/dev/null 2>&1
 			sleep 2
 			if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
-				echo "Setting Cron Job" >$REAL_LOG 
+				echo "Setting Cron Job" >$REAL_LOG
 			elif [ "${lang}" == "zh_cn" ];then
 				echo "设置Cron" >$REAL_LOG
-								
-			fi	
+
+			fi
 			add_cron >/dev/null 2>&1
 			sleep 1
 			if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
-				echo "Restarting Dnsmasq " >$REAL_LOG 
+				echo "Restarting Dnsmasq " >$REAL_LOG
 			elif [ "${lang}" == "zh_cn" ];then
 				echo "重启 Dnsmasq 程序" >$REAL_LOG
-			fi				
-			/etc/init.d/dnsmasq restart >/dev/null 2>&1				
-			sleep 1				
-			$Core -config $CONFIG_FILE  >/dev/null 2>&1 &		
+			fi
+			/etc/init.d/dnsmasq restart >/dev/null 2>&1
+			sleep 1
+			$Core -config $CONFIG_FILE  >/dev/null 2>&1 &
 			if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
-				echo "Trojan-GO Core Started Successfully " >$REAL_LOG 
+				echo "Trojan-GO Core Started Successfully " >$REAL_LOG
 			elif [ "${lang}" == "zh_cn" ];then
 				echo "Trojan-GO计划任务,启动进程守护程序" >$REAL_LOG
-			fi	
-			mv $TSHARE/disable.lock $TSHARE/enable.lock			
+			fi
+			mv $TSHARE/disable.lock $TSHARE/enable.lock
 			if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
 				echo "Trojan-GO Started Successfully " >$REAL_LOG
 				sleep 1
@@ -193,8 +193,8 @@ start(){
 		else
 			stop >/dev/null 2>&1 &
 		fi
-	else 
-		if [ ! -f  $TSHARE/disable.lock ]; then	
+	else
+		if [ ! -f  $TSHARE/disable.lock ]; then
 			touch /usr/share/$NAME/disable.lock 2>/dev/null
 			rm rf /usr/share/$NAME/enable.lock 2>/dev/null	
 			start >/dev/null 2>&1 &
@@ -226,26 +226,26 @@ stop(){
 		echo "Trojan-GO停止进程守护程序" >$REAL_LOG
 	fi
 	sleep 1
-	echo "Trojan-GO for OpenWRT" >$REAL_LOG		
+	echo "Trojan-GO for OpenWRT" >$REAL_LOG
 	rm rf $TSHARE/enable.lock >/dev/null 2>&1
-	touch $TSHARE/disable.lock 2>/dev/null		
+	touch $TSHARE/disable.lock 2>/dev/null
 	if [ "${lang}" == "en" ] || [ $lang == "auto" ];then
 		echo "" $LOG >/dev/null 2>&1
-		echo "Client Stopped" >$LOG 
+		echo "Client Stopped" >$LOG
 	elif [ "${lang}" == "zh_cn" ];then
 		echo "" $LOG >/dev/null 2>&1
 		echo "客户端停止" >$LOG
-	fi		 	
+	fi
 }
 
 
 restart(){
 	if pidof trojan-go >/dev/null; then
 		stop  >/dev/null 2>&1
-		start >/dev/null 2>&1		
+		start >/dev/null 2>&1
 	else
 		start >/dev/null 2>&1
-	fi		
+	fi
 }
 
 boot(){
@@ -256,6 +256,6 @@ reload(){
 	if pidof trojan-go >/dev/null; then
 		remove_mark 2>/dev/null
 		dns_change 2>/dev/null 2>&1
-		rules >/dev/null 2>&1 
-	fi	  
+		rules >/dev/null 2>&1
+	fi
 }
diff --git a/root/usr/share/trojan/core_download.sh b/root/usr/share/trojan/core_download.sh
index 3d44c7f..c9297dc 100644
--- a/root/usr/share/trojan/core_download.sh
+++ b/root/usr/share/trojan/core_download.sh
@@ -12,15 +12,15 @@ if [ -f /tmp/trojan-go.zip ];then
 fi
 
 echo '' >/tmp/trojan_update.txt 2>/dev/null
-  
+
 rm -rf $TSHARE/core_down_complete /var/run/core_update_error 2>/dev/null
 
 rm -rf $TSHARE/download_core_version 2>/dev/null
 
 if [ $lang == "zh_cn" ];then
-    echo "  ${LOGTIME} - 正在检查最新版本。。" >$LOG_FILE
+    echo "${LOGTIME} - 正在检查最新版本。。" >$LOG_FILE
 elif [ $lang == "en" ] || [ $lang == "auto" ];then
-    echo "  ${LOGTIME} - Checking latest version.." >$LOG_FILE
+    echo "${LOGTIME} - Checking latest version.." >$LOG_FILE
 fi
 
 version=`wget -qO- https://github.com/$source/tags | grep "/$source/releases/"| head -n 1| awk -F "/tag/" '{print $2}'| sed 's/\">//'`
@@ -34,66 +34,66 @@ fi
 sleep 3
 
 if [ -f $TSHARE/download_core_version ];then
-	VER=$(sed -n 1p $TSHARE/download_core_version 2>/dev/null) 
+	VER=$(sed -n 1p $TSHARE/download_core_version 2>/dev/null)
 fi
 
 
 update(){
 		if [ -f /tmp/trojan-go/trojan-go-"$MODELTYPE".zip ];then
 			rm -rf /tmp/trojan-go/trojan-go-"$MODELTYPE".zip >/dev/null 2>&1
-		fi		
+		fi
 		if [ $lang == "zh_cn" ];then
-			 echo "  ${LOGTIME} - 开始下载 trojan-go 内核..." >$LOG_FILE
+			 echo "${LOGTIME} - 开始下载 trojan-go 内核..." >$LOG_FILE
 		elif [ $lang == "en" ] || [ $lang == "auto" ];then
-			 echo "  ${LOGTIME} - Starting trojan-go Core download" >$LOG_FILE
-		fi				
+			 echo "${LOGTIME} - Starting trojan-go Core download" >$LOG_FILE
+		fi		
 		mkdir p /tmp/trojan-go >/dev/null 2>&1
 		cd /tmp/trojan-go
-		wget --no-check-certificate  https://github.com/"$source"/releases/download/"$VER"/trojan-go-"$MODELTYPE".zip -O 2>&1 >1 /tmp/trojan-go/trojan-go-"$MODELTYPE".zip	  
-	   
+		wget --no-check-certificate  https://github.com/"$source"/releases/download/"$VER"/trojan-go-"$MODELTYPE".zip -O 2>&1 >1 /tmp/trojan-go/trojan-go-"$MODELTYPE".zip
+
 	    if [ "$?" -eq "0" ]; then
 			if [ $lang == "zh_cn" ];then
-				echo "  ${LOGTIME} - 开始解压缩文件" >$LOG_FILE
+				echo "${LOGTIME} - 开始解压缩文件" >$LOG_FILE
 			elif [ $lang == "en" ] || [ $lang == "auto" ];then 
-				echo "  ${LOGTIME} - Beginning to unzip file" >$LOG_FILE
-			fi			   
+				echo "${LOGTIME} - Beginning to unzip file" >$LOG_FILE
+			fi
 		    unzip /tmp/trojan-go/trojan-go-"$MODELTYPE".zip >/dev/null 2>&1\
 		    && rm -rf /tmp/trojan-go/trojan-go-"$MODELTYPE".zip >/dev/null 2>&1\
 		    && chmod 755 /tmp/trojan-go\
-		    && chown root:root /tmp/trojan-go 
+		    && chown root:root /tmp/trojan-go
 			if [ $lang == "zh_cn" ];then
-			   echo "  ${LOGTIME} - 完成下载内核，正在更新..." >$LOG_FILE
+			   echo "${LOGTIME} - 完成下载内核，正在更新..." >$LOG_FILE
 			elif [ $lang == "en" ] || [ $lang == "auto" ];then
-			   echo "  ${LOGTIME} - Successfully downloaded core, updating now..." >$LOG_FILE
-			fi			  
+			   echo "${LOGTIME} - Successfully downloaded core, updating now..." >$LOG_FILE
+			fi
 			mv /tmp/trojan-go/trojan-go-$MODELTYPE/trojan-go /usr/bin/trojan-go >/dev/null 2>&1
 			chmod -R 755 /usr/bin
 			rm -rf /tmp/trojan-go >/dev/null 2>&1
 			rm -rf $TSHARE/core_version >/dev/null 2>&1
-			mv $TSHARE/download_core_version $TSHARE/core_version >/dev/null 2>&1			  
-			  
+			mv $TSHARE/download_core_version $TSHARE/core_version >/dev/null 2>&1
+
 			if [ $lang == "zh_cn" ];then
-			  echo "  ${LOGTIME} - TrojanGo内核更新成功！" >$LOG_FILE
+			  echo "${LOGTIME} - TrojanGo内核更新成功！" >$LOG_FILE
 			elif [ $lang == "en" ] || [ $lang == "auto" ];then
-			  echo "  ${LOGTIME} - TrojanGo Core Update Successful" >$LOG_FILE
+			  echo "${LOGTIME} - TrojanGo Core Update Successful" >$LOG_FILE
 			fi
 		    sleep 2
 		    touch $TSHARE/core_down_complete >/dev/null 2>&1
 		    sleep 2
 		    rm -rf /var/run/core_update >/dev/null 2>&1
-		    echo "" > /tmp/trojan_update.txt >/dev/null 2>&1			
+		    echo "" > /tmp/trojan_update.txt >/dev/null 2>&1
 	    else
 		  if [ $lang == "zh_cn" ];then
-			echo "  ${LOGTIME} - 核心程序下载失败，请检查网络或稍后再试！" >$LOG_FILE
+			echo "${LOGTIME} - 核心程序下载失败，请检查网络或稍后再试！" >$LOG_FILE
 		  elif [ $lang == "en" ] || [ $lang == "auto" ];then     
-			echo "  ${LOGTIME} - Core Update Error" >$LOG_FILE
+			echo "${LOGTIME} - Core Update Error" >$LOG_FILE
 		  fi
 		  rm -rf /tmp/trojan-go/trojan-go-"$MODELTYPE".zip >/dev/null 2>&1
 		  echo "" > /tmp/trojan_update.txt >/dev/null 2>&1
 		  touch /var/run/core_update_error >/dev/null 2>&1
-	    fi 		
+	    fi
 		if pidof $NAME >/dev/null; then
-		   	/etc/init.d/$NAME restart >/dev/null		
+		   	/etc/init.d/$NAME restart >/dev/null
 		fi
 }
 
diff --git a/root/usr/share/trojan/dnscrypt.sh b/root/usr/share/trojan/dnscrypt.sh
index 5c4a6ef..e289fdf 100644
--- a/root/usr/share/trojan/dnscrypt.sh
+++ b/root/usr/share/trojan/dnscrypt.sh
@@ -1,7 +1,7 @@
 #!/bin/bash /etc/rc.common
 . /lib/functions.sh
 
- 
+
 USE_PROCD=1
 CONFIG_DIR=/var/etc
 USER=nobody
@@ -11,14 +11,14 @@ dnscrypt_instance() {
     local config_path="$CONFIG_DIR/dnscrypt-proxy-ns1.conf"
     create_config_file $1 "$config_path"
     $PROG "$config_path" >/dev/null 2>&1 &
- 
+
 }
 
 create_config_file() {
 
     local address port resolver resolvers_list ephemeral_keys client_key log_level syslog syslog_prefix local_cache query_log_file provider_name provider_key resolver_address
     local config_path="$2"
-    
+
 
     [ ! -d "$CONFIG_DIR" ] && mkdir -p "$CONFIG_DIR"
     [ -f "$config_path" ] && rm "$config_path"
@@ -39,7 +39,7 @@ create_config_file() {
     config_get_bool ephemeral_keys  $1 'ephemeral_keys' '0'
     config_get_bool local_cache     $1 'local_cache'    '0'
     config_get_bool block_ipv6      $1 'block_ipv6'     '0'
- 
+
 
     append_param_not_empty  "ResolverName"  "$resolver"         $config_path
     append_param            "ResolversList" "$resolvers_list"   $config_path
@@ -80,7 +80,7 @@ append_param() {
     local param_name=$1
     local param_value=$2
     local config_path=$3
-	
+
     echo "$param_name $param_value" >> $config_path
 }
 
@@ -105,4 +105,4 @@ dnscrypt_start_service() {
     config_foreach dnscrypt_instance settings
 }
 
-dnscrypt_start_service
\ No newline at end of file
+dnscrypt_start_service
diff --git a/root/usr/share/trojan/iptables.sh b/root/usr/share/trojan/iptables.sh
index 1d6a54e..4186d4d 100644
--- a/root/usr/share/trojan/iptables.sh
+++ b/root/usr/share/trojan/iptables.sh
@@ -1,27 +1,27 @@
 #!/bin/sh 	
 NAME=trojan
-if [ "$1" = "start" ];then	
+if [ "$1" = "start" ];then
 	server=`awk '/remote_addr/ {print $0}' /etc/trojan/config.json | sed 's/\,//' | sed 's/\"//g' | grep : | awk -F ': ' '{print $2}'`
-	udp_allow=$(uci get $NAME.@settings[0].udp 2>/dev/null)				
-	if echo $server | grep -E "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$">/dev/null; then         
+	udp_allow=$(uci get $NAME.@settings[0].udp 2>/dev/null)	
+	if echo $server | grep -E "^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$">/dev/null; then
 		Server=$server
 	else
 		Server=`nslookup ${server} | grep 'Address 1' | sed 's/Address 1: //g'`
-	fi		
+	fi	
 	if [ "$(uci get $NAME.@settings[0].access_control 2>/dev/null)" = "1" ] && [ -n "$(uci get $NAME.@settings[0].proxy_lan_ips 2>/dev/null)" ]; then
 		proxy_ips=$(uci get $NAME.@settings[0].proxy_lan_ips 2>/dev/null)
 		ipset -! -R <<-EOF
 			create proxy_lan hash:net
 			$(for ip in $proxy_ips; do echo "add proxy_lan $ip"; done)
 		EOF
-		
+
 	elif [ "$(uci get $NAME.@settings[0].access_control 2>/dev/null)" = "2" ] && [ -n "$(uci get $NAME.@settings[0].reject_lan_ips 2>/dev/null)" ]; then
 		reject_ips=$(uci get $NAME.@settings[0].reject_lan_ips 2>/dev/null)
 		ipset -! -R <<-EOF
 			create reject_lan hash:net
 			$(for ip in $reject_ips; do echo "add reject_lan $ip"; done)
 		EOF
-		
+
 	fi
 	if [ -z "$(uci get firewall.$NAME 2>/dev/null)" ] || [ -z "$(uci get ucitrack.@$NAME[-1].init 2>/dev/null)" ]; then
 		uci delete ucitrack.@$NAME[-1] >/dev/null 2>&1
@@ -33,7 +33,7 @@ if [ "$1" = "start" ];then
 		uci set firewall.$NAME.type=script >/dev/null 2>&1
 		uci set firewall.$NAME.path=/var/etc/$NAME.include >/dev/null 2>&1
 		uci set firewall.$NAME.reload=1 >/dev/null 2>&1
-	fi	
+	fi
 	if [ "$(uci get firewall.@defaults[0].forward)" != "ACCEPT" ]; then
 		uci set firewall.@defaults[0].forward=ACCEPT >/dev/null 2>&1
 		uci commit firewall >/dev/null 2>&1
@@ -43,12 +43,12 @@ if [ "$1" = "start" ];then
 	cat > "/var/etc/$NAME.include" <<-EOF
 		/etc/init.d/$NAME reload >/dev/null 2>&1
 	EOF
-			
+
 	proxy_mode=$(uci get $NAME.@global[0].proxy_mode 2>/dev/null)
 	ip route add local default dev lo table 100
-	ip rule add fwmark 1 lookup 100	
+	ip rule add fwmark 1 lookup 100
 	ipt6="/sbin/ip6tables"
-	iptables -t mangle -N TROJAN_GO	
+	iptables -t mangle -N TROJAN_GO
 	wan=$(ifconfig | grep 'inet addr' | awk '{print $2}' | cut -d: -f2 2>/dev/null)
 	ipset create localnetwork hash:net
 	ipset add localnetwork 127.0.0.0/8
@@ -63,12 +63,12 @@ if [ "$1" = "start" ];then
 		for wan_ip4s in $wan; do
 			ipset add localnetwork "$wan_ip4s" 2>/dev/null
 		done
-	fi	
+	fi
 	iptables -t mangle -N TROJAN_GO
 	iptables -t mangle -A TROJAN_GO -m set --match-set localnetwork dst -j RETURN
 	iptables -t mangle -A TROJAN_GO -m set --match-set reject_lan src -j RETURN
-	iptables -t mangle -A TROJAN_GO -m set ! --match-set proxy_lan src -j RETURN				
-	if [ "$proxy_mode" == "bypasscn" ];then	
+	iptables -t mangle -A TROJAN_GO -m set ! --match-set proxy_lan src -j RETURN	
+	if [ "$proxy_mode" == "bypasscn" ];then
 		sh /usr/bin/cnipset >/dev/null 2>&1
 		sleep 1
 		#iptables -t mangle -A TROJAN_GO -m set  --match-set chinav4 dst -j RETURN
@@ -95,13 +95,13 @@ if [ "$1" = "start" ];then
 	fi
 	iptables -t mangle -A PREROUTING -p tcp -j TROJAN_GO
 	iptables -t mangle -A PREROUTING -p udp -j TROJAN_GO
-fi	
+fi
 if [ "$1" = "stop" ];then
 	rm -rf /var/etc/$NAME.include 2>/dev/null
 	ip route del local default dev lo table 100
-	ip rule del fwmark 1 lookup 100		
+	ip rule del fwmark 1 lookup 100	
 	iptables -t mangle -F TROJAN_GO 2>/dev/null
-	iptables -t mangle -X TROJAN_GO 2>/dev/null			
+	iptables -t mangle -X TROJAN_GO 2>/dev/null
 	ipset -! flush proxy_lan >/dev/null 2>&1
 	ipset -! flush reject_lan >/dev/null 2>&1
 	ipset -! flush gfw >/dev/null 2>&1
@@ -110,8 +110,8 @@ if [ "$1" = "stop" ];then
 	ipset destroy reject_lan >/dev/null 2>&1
 	ipset destroy gfw >/dev/null 2>&1
 	ipset destroy proxy_lan >/dev/null 2>&1
-	ipset destroy chinav4 >/dev/null 2>&1 
-	ipset destroy chinav6 >/dev/null 2>&1 
+	ipset destroy chinav4 >/dev/null 2>&1
+	ipset destroy chinav6 >/dev/null 2>&1
 	ipset destroy localnetwork >/dev/null 2>&1
 
 	nat=$(iptables -nvL PREROUTING -t nat | sed 1,2d | sed -n '/tcp dpt:53/=' | sort -r)
@@ -121,15 +121,15 @@ if [ "$1" = "stop" ];then
 	mag=$(iptables -nvL PREROUTING -t mangle | sed 1,2d | sed -n '/TROJAN_GO/=' | sort -r)
 	for nat_indexv in $mag; do
 		iptables -t mangle -D PREROUTING $nat_indexv >/dev/null 2>&1
-	done									
+	done						
 	proxy_lan=$(iptables -nvL PREROUTING -t mangle | sed 1,2d | sed -n '/proxy_lan src/=' | sort -r)
 	for natx in $proxy_lan; do
 		iptables -t mangle -D PREROUTING $natx >/dev/null 2>&1
-	done		
+	done
 	reject_lan=$(iptables -nvL PREROUTING -t mangle | sed 1,2d | sed -n '/reject_lan src/=' | sort -r)
 	for natx in $reject_lan; do
 		iptables -t mangle -D PREROUTING $natx >/dev/null 2>&1
-	done		
+	done
 	chinav4_lan=$(iptables -nvL PREROUTING -t mangle | sed 1,2d | sed -n '/chinav4/=' | sort -r)
 	for natv4 in $chinav4_lan; do
 		iptables -t mangle -D PREROUTING $natv4 >/dev/null 2>&1
@@ -147,5 +147,5 @@ if [ "$1" = "stop" ];then
 	for prer in $pre; do
 		iptables -t mangle -D PREROUTING $prer 2>/dev/null
 	done
-	iptables -t nat -I PREROUTING -p tcp --dport 53 -j ACCEPT				
+	iptables -t nat -I PREROUTING -p tcp --dport 53 -j ACCEPT
 fi
diff --git a/root/usr/share/trojan/pdnsd.sh b/root/usr/share/trojan/pdnsd.sh
index d984360..6d89b90 100644
--- a/root/usr/share/trojan/pdnsd.sh
+++ b/root/usr/share/trojan/pdnsd.sh
@@ -1,17 +1,17 @@
 #!/bin/bash /etc/rc.common
 . /lib/functions.sh
- 
+
 	dns_mode=$(uci get trojan.@settings[0].dns_mode 2>/dev/null)
 	dnsstr=$(uci get trojan.@settings[0].tunnel_forward 2>/dev/null)
-		
+
 	usr_dns=`echo "$dnsstr"|sed 's/^\(.*\):\([^:]*\)$/\1/'`
 	usr_port=`echo "$dnsstr"|sed 's/^\(.*\):\([^:]*\)$/\2/'`
-	
+
 	[ "$usr_dns" == "127.0.0.1" ] && usr_dns="8.8.4.4" && usr_port="53" && dnsforward=1
-		
+
 	#local usr_dns="$1"
 	#local usr_port="$2"
-  
+
 	tcp_dns_list="208.67.222.222, 208.67.220.220"
 	[ -z "$usr_dns" ] && usr_dns="8.8.4.4" && usr_port="53"
 
@@ -22,7 +22,7 @@
        echo -ne "pd13\000\000\000\000" >/var/pdnsd/pdnsd.cache
        chown -R nobody:nogroup /var/pdnsd
    fi
-	
+
 cat > /var/etc/pdnsd.conf <<EOF
 global {
 	perm_cache=1024;
@@ -61,4 +61,4 @@ server {
 }
 EOF
 
-/usr/sbin/pdnsd -c /var/etc/pdnsd.conf -d
+/usr/sbin/pdnsd -c /var/etc/pdnsd.conf >/dev/null 2>&1 &
diff --git a/root/usr/share/trojan/subscribe.sh b/root/usr/share/trojan/subscribe.sh
index bdefde8..9b88cff 100644
--- a/root/usr/share/trojan/subscribe.sh
+++ b/root/usr/share/trojan/subscribe.sh
@@ -1,6 +1,6 @@
 #!/bin/bash /etc/rc.common
 . /lib/functions.sh
-   
+
 lang=$(uci get luci.main.lang 2>/dev/null)
 server_file="/tmp/server_file.yaml"
 single_server="/tmp/single_server.yaml"
@@ -24,7 +24,7 @@ urldecode(){
 num=$(grep -c "password=" $server_file 2>/dev/null)
 count=1
 
-while [[ "$( grep -c "config servers" $CFG_FILE )" -ne 0 ]] 
+while [[ "$( grep -c "config servers" $CFG_FILE )" -ne 0 ]]
 do
   uci delete trojan.@servers[0] && uci commit trojan >/dev/null 2>&1
 done
@@ -39,49 +39,49 @@ do
   sed -n "${count}"p $server_file |sed 's/&/\n/g' >/dev/null  >>$single_server
 
   server_passwd="$(cfg_get "password=" "$single_server")"
-  
+
   name="$(cfg_get "remarks=" "$single_server")"
-  
+
   server="$(cfg_get "server=" "$single_server")"
-  
+
   port="$(cfg_get "port=" "$single_server")"
 
   sni="$(cfg_get "sni=" "$single_server")"
-  
+
   ws_type="$(cfg_get "type=" "$single_server")"
 
   ws_host="$(cfg_get "host=" "$single_server")"
    
   ws_path="$(cfg_get "path=" "$single_server")"
- 
+
   ss="$(cfg_get "encryption=" "$single_server")"
-   
+
   sever_name=$(echo $name | urldecode )
   if $ss;then
    ss_type=$(echo "$ss" | grep ";" |awk -F ";" '{print $1}' >/dev/null 2>&1)
    ss_cipher=$(echo "$ss" | grep ";" |awk -F ";" '{print $2}' >/dev/null 2>&1)
    ss_pass=$(echo "$ss" | grep ";" |awk -F ":" '{print $3}' >/dev/null 2>&1)
-  fi   
-	  
+  fi
+
   if [ $lang == "en" ] || [ $lang == "auto" ];then
 	echo "Now Reading 【Trojan-Go】 - 【$sever_name】 Servers..." >$REAL_LOG
   elif [ $lang == "zh_cn" ];then
 	echo "正在读取 【Trojan-Go】 - 【$sever_name】 代理..." >$REAL_LOG
-  fi 
-				
+  fi
+
   name=trojan
   uci_name_tmp=$(uci add $name servers)
 
   uci_set="uci -q set $name.$uci_name_tmp."
   uci_add="uci -q add_list $name.$uci_name_tmp."
-   
-  ${uci_set}name="$sever_name" 
+
+  ${uci_set}name="$sever_name"
   ${uci_set}remote_addr="$server" >/dev/null 2>&1
   ${uci_set}remote_port="$port" >/dev/null 2>&1
   ${uci_set}password="$server_passwd"  >/dev/null 2>&1
   ${uci_set}sni="$sni" >/dev/null 2>&1
   ${uci_set}fingerprint="firefox" >/dev/null 2>&1
-   
+
   if [ $ws_type == "ws" ];then >/dev/null 2>&1
     ${uci_set}websocket="true" >/dev/null 2>&1
     ${uci_set}path="$ws_path" >/dev/null 2>&1
@@ -103,4 +103,4 @@ rm -rf  $single_server $server_file >/dev/null 2>&1
 	echo "Trojan-GO for OpenWRT" >$REAL_LOG
 	exit 0
 done
-/etc/init.d/trojan restart >/dev/null 2>&1
\ No newline at end of file
+/etc/init.d/trojan restart >/dev/null 2>&1
diff --git a/root/usr/share/trojan/watchdog.sh b/root/usr/share/trojan/watchdog.sh
index 1f42f6a..015779a 100644
--- a/root/usr/share/trojan/watchdog.sh
+++ b/root/usr/share/trojan/watchdog.sh
@@ -1,7 +1,7 @@
 #!/bin/sh /etc/rc.common
 
 REAL_LOG="/usr/share/trojan/trojan.txt"
- 
+
 count=$(grep -c '' /usr/share/trojan/trojan.txt 2>/dev/null)
 enable=$(uci get trojan.@global[0].enable 2>/dev/null)
 dns_mode=$(uci get trojan.@settings[0].dns_mode 2>/dev/null)
@@ -15,12 +15,12 @@ if [ "${enable}" -eq 1 ];then
 	if ! pidof pdnsd >/dev/null; then
 		sh /usr/share/trojan/pdnsd.sh >/dev/null 2>&1 &
 	fi
-	fi	
+	fi
 	if  [ "$dns_mode" == "dnscrypt" ];then
 	if ! pidof dnscrypt-proxy >/dev/null; then
 		sh /usr/share/trojan/dnscrypt.sh >/dev/null 2>&1 &
 	fi
-	fi	
+	fi
 	if ! pidof trojan-go >/dev/null; then
 		/etc/init.d/trojan restart 2>&1 &
 	fi
