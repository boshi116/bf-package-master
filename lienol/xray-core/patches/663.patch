From 656c76b203fdb39d9735220852da05588a6934fb Mon Sep 17 00:00:00 2001
From: Weidi Deng <weidi_deng@icloud.com>
Date: Wed, 4 Aug 2021 22:14:15 +0800
Subject: [PATCH 1/2] Fix when there are multiple certs, after refresh from
 file all will be the same as the last. Removed unnecessary index calculation.

---
 transport/internet/tls/config.go  | 7 +++----
 transport/internet/xtls/config.go | 7 +++----
 2 files changed, 6 insertions(+), 8 deletions(-)

diff --git a/transport/internet/tls/config.go b/transport/internet/tls/config.go
index e39a9a4f3..f371968f6 100644
--- a/transport/internet/tls/config.go
+++ b/transport/internet/tls/config.go
@@ -43,7 +43,7 @@ func (c *Config) loadSelfCertPool() (*x509.CertPool, error) {
 // BuildCertificates builds a list of TLS certificates from proto definition.
 func (c *Config) BuildCertificates() []*tls.Certificate {
 	certs := make([]*tls.Certificate, 0, len(c.Certificate))
-	for _, entry := range c.Certificate {
+	for index, entry := range c.Certificate {
 		if entry.Usage != Certificate_ENCIPHERMENT {
 			continue
 		}
@@ -65,8 +65,7 @@ func (c *Config) BuildCertificates() []*tls.Certificate {
 				hotReloadCertInterval = entry.OcspStapling
 				isOcspstapling = true
 			}
-			index := len(certs) - 1
-			go func(cert *tls.Certificate, index int) {
+			go func(entry *Certificate, cert *tls.Certificate, index int) {
 				t := time.NewTicker(time.Duration(hotReloadCertInterval) * time.Second)
 				for {
 					if entry.CertificatePath != "" && entry.KeyPath != "" {
@@ -107,7 +106,7 @@ func (c *Config) BuildCertificates() []*tls.Certificate {
 					certs[index] = cert
 					<-t.C
 				}
-			}(certs[len(certs)-1], index)
+			}(entry, certs[index], index)
 		}
 	}
 	return certs
diff --git a/transport/internet/xtls/config.go b/transport/internet/xtls/config.go
index cd15e573c..06d952f98 100644
--- a/transport/internet/xtls/config.go
+++ b/transport/internet/xtls/config.go
@@ -44,7 +44,7 @@ func (c *Config) loadSelfCertPool() (*x509.CertPool, error) {
 // BuildCertificates builds a list of TLS certificates from proto definition.
 func (c *Config) BuildCertificates() []*xtls.Certificate {
 	certs := make([]*xtls.Certificate, 0, len(c.Certificate))
-	for _, entry := range c.Certificate {
+	for index, entry := range c.Certificate {
 		if entry.Usage != Certificate_ENCIPHERMENT {
 			continue
 		}
@@ -66,8 +66,7 @@ func (c *Config) BuildCertificates() []*xtls.Certificate {
 				hotRelodaInterval = entry.OcspStapling
 				isOcspstapling = true
 			}
-			index := len(certs) - 1
-			go func(cert *xtls.Certificate, index int) {
+			go func(entry *Certificate, cert *xtls.Certificate, index int) {
 				t := time.NewTicker(time.Duration(hotRelodaInterval) * time.Second)
 				for {
 					if entry.CertificatePath != "" && entry.KeyPath != "" {
@@ -108,7 +107,7 @@ func (c *Config) BuildCertificates() []*xtls.Certificate {
 					certs[index] = cert
 					<-t.C
 				}
-			}(certs[len(certs)-1], index)
+			}(entry, certs[index], index)
 		}
 	}
 	return certs

From 12a5b2caa3f20b4580d215039ebfc776dcb2cceb Mon Sep 17 00:00:00 2001
From: Weidi Deng <weidi_deng@icloud.com>
Date: Fri, 6 Aug 2021 20:06:27 +0800
Subject: [PATCH 2/2] Add back index calculation because cert load may be
 skipped

---
 transport/internet/tls/config.go  | 3 ++-
 transport/internet/xtls/config.go | 3 ++-
 2 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/transport/internet/tls/config.go b/transport/internet/tls/config.go
index f371968f6..0b5672f18 100644
--- a/transport/internet/tls/config.go
+++ b/transport/internet/tls/config.go
@@ -43,7 +43,7 @@ func (c *Config) loadSelfCertPool() (*x509.CertPool, error) {
 // BuildCertificates builds a list of TLS certificates from proto definition.
 func (c *Config) BuildCertificates() []*tls.Certificate {
 	certs := make([]*tls.Certificate, 0, len(c.Certificate))
-	for index, entry := range c.Certificate {
+	for _, entry := range c.Certificate {
 		if entry.Usage != Certificate_ENCIPHERMENT {
 			continue
 		}
@@ -65,6 +65,7 @@ func (c *Config) BuildCertificates() []*tls.Certificate {
 				hotReloadCertInterval = entry.OcspStapling
 				isOcspstapling = true
 			}
+			index := len(certs) - 1
 			go func(entry *Certificate, cert *tls.Certificate, index int) {
 				t := time.NewTicker(time.Duration(hotReloadCertInterval) * time.Second)
 				for {
diff --git a/transport/internet/xtls/config.go b/transport/internet/xtls/config.go
index 06d952f98..97d332896 100644
--- a/transport/internet/xtls/config.go
+++ b/transport/internet/xtls/config.go
@@ -44,7 +44,7 @@ func (c *Config) loadSelfCertPool() (*x509.CertPool, error) {
 // BuildCertificates builds a list of TLS certificates from proto definition.
 func (c *Config) BuildCertificates() []*xtls.Certificate {
 	certs := make([]*xtls.Certificate, 0, len(c.Certificate))
-	for index, entry := range c.Certificate {
+	for _, entry := range c.Certificate {
 		if entry.Usage != Certificate_ENCIPHERMENT {
 			continue
 		}
@@ -66,6 +66,7 @@ func (c *Config) BuildCertificates() []*xtls.Certificate {
 				hotRelodaInterval = entry.OcspStapling
 				isOcspstapling = true
 			}
+			index := len(certs) - 1
 			go func(entry *Certificate, cert *xtls.Certificate, index int) {
 				t := time.NewTicker(time.Duration(hotRelodaInterval) * time.Second)
 				for {
