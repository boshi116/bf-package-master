diff --git a/unix_domain_socket.cc b/unix_domain_socket.cc
index b3b4e41..8831013 100644
--- a/unix_domain_socket.cc
+++ b/unix_domain_socket.cc
@@ -85,7 +85,7 @@ bool UnixDomainSocket::SendMsg(int fd,
 #if BUILDFLAG(IS_APPLE)
     msg.msg_controllen = checked_cast<socklen_t>(control_len);
 #else
-    msg.msg_controllen = control_len;
+    msg.msg_controllen = static_cast<socklen_t>(control_len);
 #endif
     cmsg = CMSG_FIRSTHDR(&msg);
     cmsg->cmsg_level = SOL_SOCKET;
@@ -93,7 +93,7 @@ bool UnixDomainSocket::SendMsg(int fd,
 #if BUILDFLAG(IS_APPLE)
     cmsg->cmsg_len = checked_cast<u_int>(CMSG_LEN(sizeof(int) * fds.size()));
 #else
-    cmsg->cmsg_len = CMSG_LEN(sizeof(int) * fds.size());
+    cmsg->cmsg_len = static_cast<socklen_t>(CMSG_LEN(sizeof(int) * fds.size()));
 #endif
     memcpy(CMSG_DATA(cmsg), &fds[0], sizeof(int) * fds.size());
     msg.msg_controllen = cmsg->cmsg_len;
@@ -175,6 +175,9 @@ ssize_t UnixDomainSocket::RecvMsgWithFlags(int fd,
   if (msg.msg_controllen > 0) {
     struct cmsghdr* cmsg;
     for (cmsg = CMSG_FIRSTHDR(&msg); cmsg; cmsg = CMSG_NXTHDR(&msg, cmsg)) {
+      if (reinterpret_cast<unsigned long>(CMSG_NXTHDR(&msg, cmsg)) >= reinterpret_cast<unsigned long>(__MHDR_END(&msg))) {
+        break;
+      }
       const size_t payload_len = cmsg->cmsg_len - CMSG_LEN(0);
       if (cmsg->cmsg_level == SOL_SOCKET && cmsg->cmsg_type == SCM_RIGHTS) {
         DCHECK_EQ(payload_len % sizeof(int), 0u);
